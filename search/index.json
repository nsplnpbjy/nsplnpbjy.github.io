[{"content":" 什么是hugo？ 怎么安装hugo？ 创建一个网站 下载一个主题 根据主题作者给的指示来修改hugo.toml文件是一个难点，非常重要 创建文章 生成网站 部署网站 难点：找到合适的主题，并按照主题作者的指引文件配置好hugo.toml 以往我们在部署自己的网站，例如博客一类网站的时候，通常还需要部署一个服务器，用来运行后端服务和数据库，如果我们仅仅是需要做一个博客这种与后端交互比较少的网站，这会非常浪费钱。 于是，我们使用 hugo这种工具以及 Github Pages 来进行一个免费的站点制作。\n什么是hugo？\rhugo是一个使用go语言环境的网页生成器，简而言之，你的博客每更新一次文章，就用hugo来重新生成整个网站，再把它推送到服务器上就可以运行。 这样做的好处是，不用后端的一系列服务和数据库，省去了买服务器的钱，再加上github本身又让你免费host一个静态网站，那么你用hugo生成出来的网站也可以直接放上去不要钱，赢麻了这波属于是。\n怎么安装hugo？\r首先你要有go的环境，这一步无非就是去golang下载一下go，然后配置一下环境变量，这里就不细说了。\n其次你要安装一个hugo，点击这里下载hugo，hugo是一个单独的文件，比如在Windows下是hugo.exe，这里建议下载extended版本的，可以避免一些后续问题。\n现在要设置环境变量，比如我的hugo.exe在D:\\hugo_extended_0.136.2_windows-amd64里，那么我就去编辑系统变量的Path，把这个D:\\hugo_extended_0.136.2_windows-amd64地址加入进去，然后你使用powershell就可以运行hugo命令了。\n尝试运行hugo version，如果跳出版本号，就说明hugo安装成功。\n创建一个网站\r这里我们用powershell进入一个文件夹，然后运行hugo new site quickstart，你就能得到一个名为quickstart的网站的框架结构。 自动创建的文件里，hugo.toml是非常重要的配置文件，它的配置通常取决于你的主题选择。 自动创建的content文件夹就是你以后发布文章的地方 别忘了在你的网站目录下运行git init来初始化git\n下载一个主题\r我们去github搜索一个主题，你可以搜索关键字类似于hugo theme，来寻找主题，这里我们使用hugo-coder这个主题。 使用 git submodule add https://github.com/luizdepra/hugo-coder.git themes/hugo-coder 来下载这个主题，这个命令会把主题下载到themes/hugo-coder里面。 现在我们要修改hugo.toml文件来把这个主题使用起来。 我们有主题作者给的示例\n根据主题作者给的指示来修改hugo.toml文件是一个难点，非常重要\r这里，你可以根据自己的需求来更改配置，比如我们修改\n1 2 3 4 5 6 7 8 9 10 11 12 13 //修改前 [[params.social]] name = \u0026#34;Medium\u0026#34; icon = \u0026#34;fa-brands fa-medium fa-2x\u0026#34; weight = 5 url = \u0026#34;https://medium.com/@johndoe\u0026#34; //修改后 [[params.social]] name = \u0026#34;微博\u0026#34; icon = \u0026#34;fa-brands fa-weibo fa-2x\u0026#34; weight = 5 //序号 url = \u0026#34;你的微博链接\u0026#34; 就加上了你的社交媒体 接下来我们关注\n1 2 3 4 [[languages.pt-br.menu.main]] name = \u0026#34;Projetos\u0026#34; //菜单名 weight = 3 //序号 url = \u0026#34;projects/\u0026#34; //content文件夹下装文章的文件夹 创建文章\r我们使用hugo new content content/posts/my-first-post.md来创建一个新文章，这篇文章在posts下面，所以会被\n1 2 3 4 [[languages.pt-br.menu.main]] name = \u0026#34;Blog\u0026#34; weight = 2 url = \u0026#34;posts/\u0026#34; 的菜单来使用到，文章会自动生成一些参数，比如：\n1 2 3 4 5 +++ date = \u0026#39;2024-10-19T13:37:19+08:00\u0026#39; draft = false title = \u0026#39;联系方式\u0026#39; +++ 这里面的draft是草稿的意思，如果true，那么在后续的一些命令中这篇文章不会被使用到。\n生成网站\r我们写好文章之后，使用hugo build来把网站生成出来。 我们会得到一个public文件夹 这个文件夹就是传统的Web 应用服务器类似于tomcat引擎用到的部署文件。\n部署网站\r首先去github创建一个仓库，这个仓库必须被命名为你的ID.github.io，否则我的评价是不行。 比如我的叫做nsplnpbjy.github.io 进入刚刚生成的public文件夹，初始化一下git，然后push到你的ID.github.io仓库。 然后等一下 要等两分钟左右 打开https://你的ID.github.io/，比如我的https://nsplnpbjy.github.io/，就是你的网站了。\n难点：找到合适的主题，并按照主题作者的指引文件配置好hugo.toml\r","date":"2024-10-20T00:40:48+08:00","image":"https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }}","permalink":"https://nsplnpbjy.github.io/techpage/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2/","title":"静态网站部署"}]