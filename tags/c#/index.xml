<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>C# on ComradeGenrr&#39;s Blog</title>
        <link>https://nsplnpbjy.github.io/tags/c%23/</link>
        <description>Recent content in C# on ComradeGenrr&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>All</copyright>
        <lastBuildDate>Wed, 30 Oct 2024 14:35:10 +0800</lastBuildDate><atom:link href="https://nsplnpbjy.github.io/tags/c%23/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Unity6游戏开发学习之人物攻击以及受击</title>
        <link>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%BA%E7%89%A9%E6%94%BB%E5%87%BB%E4%BB%A5%E5%8F%8A%E5%8F%97%E5%87%BB/</link>
        <pubDate>Wed, 30 Oct 2024 14:35:10 +0800</pubDate>
        
        <guid>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%BA%E7%89%A9%E6%94%BB%E5%87%BB%E4%BB%A5%E5%8F%8A%E5%8F%97%E5%87%BB/</guid>
        <description>&lt;img src="https://picsum.photos/800/600.webp?random=6fc93a2b" alt="Featured image of post Unity6游戏开发学习之人物攻击以及受击" /&gt;&lt;h1 id=&#34;unity6游戏开发学习之人物攻击以及受击&#34;&gt;Unity6游戏开发学习之人物攻击以及受击
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;这是一个计划，后续随着开发实践将做出修正改动&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;人物模型和动画&#34;&gt;人物模型和动画
&lt;/h2&gt;&lt;p&gt;人物模型和动画是从&lt;a class=&#34;link&#34; href=&#34;https://assetstore.unity.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unity Asset store&lt;/a&gt;下载的。&lt;br&gt;
人物模型的骨架&lt;strong&gt;RIG&lt;/strong&gt;是&lt;strong&gt;humanoid&lt;/strong&gt;标准的，动画也是，可以适配套用。&lt;/p&gt;
&lt;h2 id=&#34;人物移动&#34;&gt;人物移动
&lt;/h2&gt;&lt;p&gt;我下载的人物移动的动画有八个移动方向，有走、跑、冲刺等行为。&lt;/p&gt;
&lt;p&gt;人物的移动动画使用&lt;strong&gt;blend tree&lt;/strong&gt;控制，并且不使用&lt;strong&gt;root motion&lt;/strong&gt;，而是使用刚体&lt;strong&gt;Rigidbody&lt;/strong&gt;来控制人物旋转和移动。&lt;/p&gt;
&lt;p&gt;通过脚本接收输入，然后改变刚体的速度来控制移动方向，要注意把速度向量从&lt;strong&gt;世界坐标&lt;/strong&gt;的向量改为&lt;strong&gt;角色坐标&lt;/strong&gt;的向量。&lt;/p&gt;
&lt;p&gt;旋转要注意用一个值把鼠标输入的角度存起来，并且在每帧加减新输入的值，使用刚体的&lt;strong&gt;MoveRotation&lt;/strong&gt;方法来旋转刚体。&lt;/p&gt;
&lt;p&gt;跳跃就是给角色一个Y轴上的冲击力&lt;strong&gt;impulse force&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;地面检测使用球形检测&lt;strong&gt;Physics.SphereCast&lt;/strong&gt;来判断人物有没有着地。&lt;/p&gt;
&lt;p&gt;一切涉及刚体的物理状态更新，比如改变刚体速度，旋转刚体，给刚体施加力，都应该在**FixUpdate()&lt;strong&gt;里面进行，这是物理步长。而不是在帧步长&lt;/strong&gt;Update()**里面更新，否则会出现意想不到的问题。&lt;/p&gt;
&lt;h2 id=&#34;人物攻击和受击&#34;&gt;人物攻击和受击
&lt;/h2&gt;&lt;h3 id=&#34;给人物设置受击体&#34;&gt;给人物设置受击体
&lt;/h3&gt;&lt;p&gt;比如我们给人物的胸部增加一个空对象碰撞体 &lt;strong&gt;Box Collider&lt;/strong&gt;,并给空对象的模型一个&lt;strong&gt;Tag&lt;/strong&gt;，就叫&lt;strong&gt;chest&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;写一个通用受击脚本，这个脚本通过检测本体的&lt;strong&gt;Transform&lt;/strong&gt; 来确定自身 &lt;strong&gt;tag&lt;/strong&gt;，根据不同的&lt;strong&gt;tag&lt;/strong&gt;来确定自身是&lt;strong&gt;chest&lt;/strong&gt; &lt;strong&gt;head&lt;/strong&gt; &lt;strong&gt;belly&lt;/strong&gt;哪个部位，把它放在&lt;strong&gt;startup&lt;/strong&gt;里面来检测。&lt;/p&gt;
&lt;p&gt;我们把所有可受击的东西，比如&lt;strong&gt;chest&lt;/strong&gt;这个空对象的layer设置为&lt;strong&gt;hurtful&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;脚本提供一个受击方法比如&lt;strong&gt;GetHit&lt;/strong&gt;，这个方法将在被对方&lt;strong&gt;攻击检测&lt;/strong&gt;到之后调用，根据攻击的部位和受击的部位来决定伤害值，然后在里面再调用角色的生命值加减方法和角色的受击动画方法，具体的实现方法各种各样。&lt;/p&gt;
&lt;h3 id=&#34;给人物设置攻击检测&#34;&gt;给人物设置攻击检测
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;我们在动画中进行攻击检测&lt;/strong&gt;，比如出拳的动画，在手臂完全伸直的那一帧，增加一个事件&lt;strong&gt;Event&lt;/strong&gt;，设置好要触发的方法名，比如&lt;strong&gt;LeftStraightPunch&lt;/strong&gt;，之后在其他的脚本里去实现&lt;strong&gt;LeftStraightPunch&lt;/strong&gt;，要注意必须是&lt;strong&gt;public void&lt;/strong&gt;的，这个方法会在动画的这一帧触发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LeftStraightPunch&lt;/strong&gt;方法的脚本放去左手中指的模型上，放在这里检测效果好一点，当然也可以不放在中指上。&lt;/p&gt;
&lt;p&gt;现在我们要用&lt;strong&gt;Physics.SphereCast&lt;/strong&gt;来检测碰撞，检测的layer就是&lt;strong&gt;hurtful&lt;/strong&gt;。撞到就调用被撞对象的&lt;strong&gt;GetHit&lt;/strong&gt;方法。&lt;/p&gt;
&lt;h2 id=&#34;流程&#34;&gt;流程
&lt;/h2&gt;&lt;p&gt;A角色开始攻击动画 =》 攻击动画进行到Event帧 =》 触发LeftStraightPunch方法 =》 Physics.SphereCast攻击检测 =》 检测到的Collider依次调用GetHit =》 GetHit依据传入的参数和自身的参数计算伤害值 = 》 GetHit调用角色生命值加减方法（比如叫HP Control，挂在角色身上）=》 GetHit调用角色受击动画方法&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Unity6游戏开发学习之IK反向动力学</title>
        <link>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8Bik%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6/</link>
        <pubDate>Tue, 29 Oct 2024 10:20:06 +0800</pubDate>
        
        <guid>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8Bik%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6/</guid>
        <description>&lt;img src="https://picsum.photos/800/600.webp?random=1071e9ae" alt="Featured image of post Unity6游戏开发学习之IK反向动力学" /&gt;&lt;h1 id=&#34;unity6游戏开发学习之ik反向动力学&#34;&gt;Unity6游戏开发学习之IK反向动力学
&lt;/h1&gt;&lt;p&gt;在Unity中，&lt;strong&gt;反向动力学（Inverse Kinematics，简称IK）是一种动画技术&lt;/strong&gt;，它允许动画师通过指定某些关节（如手或脚）的最终位置来反向计算整个关节链的合理位置。这种技术在游戏开发中非常有用，尤其是在需要角色与环境进行物理交互的场景中，比如角色的手触摸到特定物体或脚步适应不平坦的地面。&lt;/p&gt;
&lt;h2 id=&#34;ik的实现步骤&#34;&gt;IK的实现步骤
&lt;/h2&gt;&lt;p&gt;要在Unity中实现IK，首先需要一个正确配置的人形Avatar骨骼。接着，创建一个Animator Controller，并为其添加至少一个动画。在Animator窗口的Layers面板中，点击层的齿轮设置图标，并勾选IK Pass复选框，这样才能启用IK功能。&lt;/p&gt;
&lt;p&gt;接下来，需要编写一个脚本来处理IK，该脚本通常会命名为IKControl。在这个脚本中，可以使用Animator类的函数，如SetIKPositionWeight、SetIKRotationWeight、SetIKPosition、SetIKRotation等，来设置IK目标和权重。&lt;/p&gt;
&lt;h2 id=&#34;例如以下是一个简单的ik控制脚本示例&#34;&gt;例如，以下是一个简单的IK控制脚本示例：
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;IKControl&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MonoBehaviour&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ikActive&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Transform&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rightHandObj&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Transform&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lookObj&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Start&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GetComponent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnAnimatorIK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ikActive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lookObj&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetLookAtWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetLookAtPosition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lookObj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rightHandObj&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetIKPositionWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AvatarIKGoal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RightHand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetIKRotationWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AvatarIKGoal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RightHand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetIKPosition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AvatarIKGoal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RightHand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rightHandObj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetIKRotation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AvatarIKGoal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RightHand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rightHandObj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetIKPositionWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AvatarIKGoal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RightHand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetIKRotationWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AvatarIKGoal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RightHand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetLookAtWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在上述脚本中，ikActive变量用于控制IK是否启用。如果启用，脚本将设置角色的右手和头部的目标位置和旋转。如果未启用，脚本将重置这些部位的位置和旋转。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h2&gt;&lt;p&gt;在使用Unity的IK功能时，需要注意以下几点：&lt;/p&gt;
&lt;p&gt;动画类型必须是Humanoid。&lt;/p&gt;
&lt;p&gt;必须在Animator Controller的对应层中勾选IK Pass选项。&lt;/p&gt;
&lt;p&gt;IK的设置和控制需要在OnAnimatorIK事件方法中进行。&lt;/p&gt;
&lt;h2 id=&#34;unity官方示例&#34;&gt;Unity官方示例
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.unity3d.com/cn/2020.3/Manual/InverseKinematics.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;反向动力学官方示例&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Unity6游戏开发学习之动画</title>
        <link>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%8A%A8%E7%94%BB/</link>
        <pubDate>Sat, 26 Oct 2024 18:16:43 +0800</pubDate>
        
        <guid>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%8A%A8%E7%94%BB/</guid>
        <description>&lt;img src="https://picsum.photos/800/600.webp?random=45dbe797" alt="Featured image of post Unity6游戏开发学习之动画" /&gt;&lt;h1 id=&#34;unity6游戏开发学习之动画&#34;&gt;Unity6游戏开发学习之动画
&lt;/h1&gt;&lt;h2 id=&#34;取得动画&#34;&gt;取得动画
&lt;/h2&gt;&lt;p&gt;由于我没有美术细菌，我的动画和模型都是从Unity的免费商店里面下载的。&lt;/p&gt;
&lt;h2 id=&#34;利用好humanoid&#34;&gt;利用好humanoid
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;humanoid&lt;/strong&gt; 是一种通用的人体骨架标准，只要是按照此标准制作的模型骨骼和动画是可以通用的。&lt;br&gt;
比如我们有一个拥有humanoid标准的模型叫bananaman，那么我们给它加上&lt;strong&gt;Animator&lt;/strong&gt;动画控制器的时候，可以选择Animator的&lt;strong&gt;Avatar&lt;/strong&gt;属性为适合的骨骼架构，通常你下载的模型里面会有骨骼。&lt;/p&gt;
&lt;p&gt;如何检查一个动画是否是humanoid的？在你的project里面点击这个动画，检查它的Rig标签，如果它的Animation Type可以调为humanoid而不报错，就是可用的。&lt;/p&gt;
&lt;h2 id=&#34;animator里面的layer和mask&#34;&gt;Animator里面的layer和mask
&lt;/h2&gt;&lt;p&gt;在layer里点击小齿轮，可以看到&lt;strong&gt;mask&lt;/strong&gt;选项，这是一个遮罩，可以只控制部分躯体实现某个动画，比如&lt;strong&gt;边走边开枪&lt;/strong&gt;，就要用mask去除腿部动画，让一个layer可以控制全身跑步的同时，被mask罩住的上半身使用另一个layer控制的开枪动画。&lt;strong&gt;控制上半身动画的另一个layer，一般要放一个空状态，不播放任何动画&lt;/strong&gt;，这样的话，当不特殊涉及上半身的动作发生时，上半身就会听从控制全身的layer来进行其他动画。&lt;/p&gt;
&lt;p&gt;以下是AI关于怎么制作一个mask的回答：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果我想制作一个只控制小人腿部动作的动画，我该怎么做一个mask&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Project 窗口中右键，选择 Create &amp;gt; Avatar Mask。&lt;/p&gt;
&lt;p&gt;将新创建的 Avatar Mask 命名为 LegsMask。&lt;/p&gt;
&lt;p&gt;配置Avatar Mask：&lt;/p&gt;
&lt;p&gt;选中 LegsMask，在 Inspector 窗口中展开骨骼层次结构，取消勾选所有上半身相关的骨骼，只保留下半身和腿部的骨骼勾选。&lt;/p&gt;
&lt;p&gt;应用Avatar Mask：&lt;/p&gt;
&lt;p&gt;打开 Animator 窗口，选中控制腿部动画的 Layer。&lt;/p&gt;
&lt;p&gt;在 Layers 面板中，点击你要应用掩码的那一层，找到 Avatar Mask 选项，将 LegsMask 拖到这个位置。&lt;/p&gt;
&lt;h2 id=&#34;用好blend-tree&#34;&gt;用好blend tree
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;blend tree&lt;/strong&gt; 可以在&lt;strong&gt;animator&lt;/strong&gt;中右键创建，它可以非常方便地控制各向移动的状态切换&lt;/p&gt;
&lt;h2 id=&#34;注意has-exit-time参数&#34;&gt;注意Has Exit Time参数
&lt;/h2&gt;&lt;p&gt;各个动画状态间转化的箭头，要注意其中的Has Exit Time，勾选这个参数，动画一定会播放完毕再进入下一个状态，根据游戏需要自行调整。&lt;/p&gt;
&lt;h2 id=&#34;注意rigidbody和rm动画同时使用的情况&#34;&gt;注意Rigidbody和RM动画同时使用的情况
&lt;/h2&gt;&lt;p&gt;如果Rigidbody和RM动画同时使用，那么RM动画自带的位移会被刚体的物理计算影响。&lt;br&gt;
如果想要正确的移动，需要对刚体的移动做出修正：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnAnimatorMove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;applyRootMotion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MovePosition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deltaPosition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MoveRotation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deltaRotation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个&lt;strong&gt;OnAnimatorMove&lt;/strong&gt;会在RM动画带来位移的时候调用，这个时候利用本物体的动画控制器&lt;strong&gt;animator&lt;/strong&gt;和本物体的刚体&lt;strong&gt;rb&lt;/strong&gt;来联合调整刚体的位置。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Unity6游戏开发学习之碰撞</title>
        <link>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%A2%B0%E6%92%9E/</link>
        <pubDate>Sat, 26 Oct 2024 18:05:08 +0800</pubDate>
        
        <guid>https://nsplnpbjy.github.io/techpage/unity6%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%A2%B0%E6%92%9E/</guid>
        <description>&lt;img src="https://picsum.photos/800/600.webp?random=20addd08" alt="Featured image of post Unity6游戏开发学习之碰撞" /&gt;&lt;h1 id=&#34;unity6游戏开发学习之碰撞&#34;&gt;Unity6游戏开发学习之碰撞
&lt;/h1&gt;&lt;h2 id=&#34;首先是碰撞的条件&#34;&gt;首先是碰撞的条件
&lt;/h2&gt;&lt;p&gt;碰撞的两个对象，&lt;strong&gt;两个对象都&lt;/strong&gt; 必须有碰撞体 &lt;strong&gt;Collider&lt;/strong&gt; ，这个碰撞体可以是&lt;strong&gt;Box Collider&lt;/strong&gt;也可以是其他的比如&lt;strong&gt;Capsule Collider&lt;/strong&gt;和&lt;strong&gt;Mesh Collider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后碰撞的 &lt;strong&gt;其中一个&lt;/strong&gt; 对象必须有 &lt;strong&gt;Rigidbody&lt;/strong&gt; 即刚体，是Unity引擎用来计算物理效果的对象。&lt;/p&gt;
&lt;p&gt;然后两个对象才能发生碰撞。&lt;/p&gt;
&lt;h2 id=&#34;mesh-collider的条件&#34;&gt;Mesh Collider的条件
&lt;/h2&gt;&lt;p&gt;Mesh Collider的网格细分比较多，效果好，但是较为耗费性能。&lt;/p&gt;
&lt;p&gt;另外，根据Unity的官方手册，&lt;strong&gt;Mesh Collider&lt;/strong&gt;与 &lt;strong&gt;Rigidbody&lt;/strong&gt; 一起使用时，必须勾上&lt;strong&gt;Convex&lt;/strong&gt; ，否则不能正常工作。此选项会粗略地给出碰撞体，降低性能开销，但是没那么精细了。&lt;/p&gt;
&lt;h2 id=&#34;rigidbody的安排&#34;&gt;Rigidbody的安排
&lt;/h2&gt;&lt;p&gt;我们&lt;strong&gt;一般不在主角身上使用Rigidbody&lt;/strong&gt;，因为这里面有很多物理引擎引出的问题，解决起来不容易。&lt;br&gt;
但如果你的玩法很新，需要一个Rigidbody安排在主角身上，那就尝试使用它。&lt;br&gt;
让其他可碰撞的物体拥有其他碰撞体。&lt;/p&gt;
&lt;h2 id=&#34;rigidbody里面的collision-detection是碰撞体检测&#34;&gt;Rigidbody里面的Collision Detection是碰撞体检测
&lt;/h2&gt;&lt;p&gt;有多个选项，分别适应低速、高速等物体碰撞&lt;/p&gt;
&lt;h2 id=&#34;碰撞后的效果&#34;&gt;碰撞后的效果
&lt;/h2&gt;&lt;h3 id=&#34;oncollisionenter&#34;&gt;OnCollisionEnter
&lt;/h3&gt;&lt;p&gt;比如我们有子弹，我们要在刚体 &lt;strong&gt;Rigidbody&lt;/strong&gt; 勾选上 &lt;strong&gt;Is Kinematic&lt;/strong&gt; 选项，此选项会让你的对象不会被其他物理效果影响，但自身能影响其他对象的物理效果，子弹特别适用。&lt;strong&gt;手雷不行，手雷涉及到弹墙壁&lt;/strong&gt;&lt;br&gt;
我们给子弹加一个脚本，脚本里面我们去覆写一个方法 &lt;strong&gt;void OnCollisionEnter(Collision collision)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;覆写这个方法可以利用collision去获得被撞到的对象比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnCollisionEnter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collision&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 检查是否碰到小人&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gameObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CompareTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Enemy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;bananaman&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bananaman&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gameObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetComponent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bananaman&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;bananaman&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TakingDamage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 销毁子弹&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Destroy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gameObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这是用子弹去调用被击物体的方法，在工业上，通常是让被击物体主动调用**void OnCollisionEnter(Collision collision)**检查自身是否被击，然后去进行下一步处理，以及销毁子弹：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;EnemyController&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GetComponent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnCollisionEnter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collision&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gameObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CompareTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Bullet&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;animator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetTrigger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;isHurt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// 销毁子弹&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;Destroy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gameObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ontriggerenter&#34;&gt;OnTriggerEnter
&lt;/h3&gt;&lt;p&gt;还是比如我们有子弹，击中了某个被设置了&lt;strong&gt;trigger&lt;/strong&gt;的collider，被击物体就会调用OnTriggerEnter、OnTriggerStay之类的事件，通常用来区分被击部位。&lt;br&gt;
比如头部和胸部各有collider，collider都被设置为&lt;strong&gt;trigger&lt;/strong&gt;，那么子弹击中头部就会触发头部的OnTriggerEnter，你在头部写的脚本就可以让角色死亡，同理，胸部的就设置掉多少血。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
